/**********************************************************
 * EECS2011: Fundamentals of Data Structures,  Fall 2014
 * TEST CASES AND OUTPUT
 * Student Name:         Michael Williams
 * Student cse account:  mw1992
 * Student ID number:    211087798
 **********************************************************/

QUESTION 2
This file contains various test cases used to ensure that the program "NutsAndBolts.java" runs in unison with
"NutsAndBoltsTester.java", and as expected, as described in the assignment 4 pdf file from the course website

Input is 2 arrays, each containing the same values, in different order.
Each value in the Nuts array refers to the size of an individual nut
Each value in the Bolts array refers to the size of an individual bolt

Output is the 2 arrays sorted, such that Nuts[i] matches Bolts[i] for any given i, an index of the arrays.

1)All positive in already sorted order
Input:  int nuts[] = {1, 2, 3, 4, 5};     
	    int bolts[] = {1, 2, 3, 4, 5};
	    
Output: {1, 2, 3, 4, 5}
		{1, 2, 3, 4, 5}

2)All positive in reverse sorted order
Input:  int nuts[] = {5, 4, 3, 2, 1};     
		int bolts[] = {5, 4, 3, 2, 1}; 

Output: {1, 2, 3, 4, 5}
		{1, 2, 3, 4, 5}
		
3)All positive, both arrays in random order
Input:  int nuts[] = {5, 2, 1, 3, 4};     
		int bolts[] = {5, 4, 1, 3, 2}; 

Output: {1, 2, 3, 4, 5};
		{1, 2, 3, 4, 5};

4)All negative, in already sorted order
Input:  int nuts[] = {-5, -4, -3, -2, -1};     
		int bolts[] = {-5, -4, -3, -2, -1};
		
Output: {-5, -4, -3, -2, -1}
		{-5, -4, -3, -2, -1}

5)All negative, in reverse sorted order
Input:  int nuts[] = {-1, -2, -3, -4, -5};     
		int bolts[] = {-1, -2, -3, -4, -5};

Output: {-5, -4, -3, -2, -1}
		{-5, -4, -3, -2, -1}

6)All negative both arrays in random order
Input:  int nuts[] = {-1, -4, -7, -9, -12};     
		int bolts[] = {-1, -7, -12, -9, -4};

Output: {-12, -9, -7, -4, -1}
		{-12, -9, -7, -4, -1}

7)mix of both positive and negative values
Input:  int nuts[] = {-7, -4, 3, -2, 12};     
		int bolts[] = {-2, 12, 3, -7, -4};

Output: {-7, -4, -2, 3, 12}
		{-7, -4, -2, 3, 12}

8)Another mix like 7), only with a different size of both arrays
Input:  int nuts[] = {-7, -4, 3, -2, 12, 8, 1, -1};     
		int bolts[] = {-2, 12, 8, 1, 3, -7, -4, -1};

Output: {-7, -4, -2, -1, 1, 3, 8, 12}
		{-7, -4, -2, -1, 1, 3, 8, 12}
		
9)Another mix like 7), only bolts is in reverse order of nuts
Input: 	int nuts[] = {-7, -4, 3, -2, 12, 8, 1, -1};     
		int bolts[] = {-1, 1, 8, 12, -2, 3, -4, -7};

Output: int nuts[] = {-7, -4, 3, -2, 12, 8, 1, -1};     
		int bolts[] = {-1, 1, 8, 12, -2, 3, -4, -7};

10)2 large arrays
Input:  int nuts[] = {-7, -4, 3, -2, 12, 8, 1, -1, 38, 40, 42, 44, 5, -12, -31};     
		int bolts[] = {42, -1, 1, 8, 38, -12, -31, 40, 5, 12, -2, 44, 3, -4, -7};
		
Output: {-31, -12, -7, -4, -2, -1, 1, 3, 5, 8, 12, 38, 40, 42, 44}
		{-31, -12, -7, -4, -2, -1, 1, 3, 5, 8, 12, 38, 40, 42, 44}

11)empty Arrays
Input:  int nuts[] = {};     
		int bolts[] = {};

Output: At least 1 Array is empty
		{}
		{}

12)very small Arrays
Input:  int nuts[] = {0};     
		int bolts[] ={0};

Output: {0}
		{0}
